{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/lib/config/domIdentifiers.ts","webpack:///./src/lib/module/Module.ts","webpack:///./src/lib/util/ClassUtil.ts","webpack:///./src/lib/util/PageUtil.ts","webpack:///./src/extension.ts","webpack:///./src/lib/module/modules/MsuHrefModule.ts","webpack:///./src/lib/module/modules/QuizModule.ts","webpack:///./src/lib/api/quiz/QuizListener.ts","webpack:///./src/lib/module/modules/StepModule.ts","webpack:///./src/lib/util/DomUtil.ts","webpack:///./src/lib/module/modules/VideoModule.ts","webpack:///./src/lib/event/TapEventListener.ts"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","default","videoClass","quizClass","videoId","videoContainerId","stepDataId","siteDataId","msuLinkHeaderClass","videoPlayButtonClass","stepProgressClass","navDivClass","Module","loadModules","_i","arguments","length","modules_1","__values","modules_1_1","next","done","start","ComponentUtil","autoBind","context","props","contextPrototype","getPrototypeOf","getOwnPropertyNames","props_1","props_1_1","prop","descriptor","getOwnPropertyDescriptor","protectedJavaScriptProperties","includes","bindMethod","proto","method","functionToBind","configurable","this","boundFunction","writable","domIdentifiers_1","PageUtil","isClassElementPresent","className","elements","document","getElementsByClassName","getNavigationBar","querySelector","getSiteData","siteDataElement","getElementById","JSON","parse","innerText","Module_1","MsuHrefModule_1","QuizModule_1","StepModule_1","VideoModule_1","PageUtil_1","MsuHrefModule","_super","__extends","data","linkElement","setAttribute","root","QuizListener_1","ClassUtil_1","QuizModule","_this","quizContainer","getNextQuestionButton","addNextQuizButtonHooks","onkeydown","e","quizContinueKeys","nextQuestionButton","toLowerCase","click","onNewQuizQuestion","inputs","getElementsByTagName","hasFocused","inputs_1","inputs_1_1","input","hidden","type","style","display","focus","isPageQuiz","onQuestion","listen","QuizListener","params","currentQuestion","getQuestionDataFromMatch","match","current","parseInt","total","onContainerMutate","mutations","observer","h2","questionRegex","test","disconnect","onStart","listenForQuizQuestionChange","onQuizHeaderMutation","MutationObserver","observe","subtree","characterData","childList","listenForQuizStart","attributes","DomUtil_1","StepModule","sectionNameToIndex","getStepData","metadata","processData","element","dataText","step","isStepEnabled","sections","section","tag","index","getProgressString","totalSections","onSectionHoverMutate","mutations_1","mutations_1_1","mutation","target","HTMLElement","sectionHoverDiv","pageName","trim","endsWith","replace","addNavBarProgressIndicator","navigationBar","progressElement","createElement","appendChild","addHoverProgressIndicator","hoverDiv","addProgressIndicators","addDuplicateNav","nav","content","clonedNav","cloneNode","originalCanvas","clonedCanvas","cloneCanvas","title","insertAdjacentElement","DomUtil","original","destination","getContext","width","height","drawImage","TapEventListener_1","VideoModule","onMutation","Element","id","addVideoHooks","toggleVideoState","_video","paused","play","pause","onTap","catch","console","error","updatePlaybackRate","newPlaybackRate","_playbackDisplay","playbackRate","addKeyHandlers","videoContainer","video","addEventListener","currentTime","Math","max","_secondsToScrub","preventDefault","min","duration","_playbackRateChange","addTapHandler","setupPlaybackDisplay","videoContentDiv","centerPlayButton","containerHeight","offsetHeight","containerWidth","offsetWidth","playButton","buttonHeight","buttonWidth","newTop","newLeft","top","left","_videoContainer","isPageVideo","TapEventListener","_isActive","_initialTouchTime","getMovementDelta","newer","older","x","pageX","y","pageY","onTouchStart","event","TouchEvent","touches","_initialTouch","Date","now","onTouchMove","_lastTouch","movement","sqrt","pow","_dragMaxSqrtDistance","onTouchEnd","_tapMaxTimeMs","addHooks"],"mappings":"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","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","export default {\r\n    videoClass: 'cl-video',\r\n    quizClass: 'cl-quiz',\r\n    videoId: 'vjs_video_3_html5_api',\r\n    videoContainerId: 'vjs_video_3',\r\n    stepDataId: 'cl-step',\r\n    siteDataId: 'cl-site',\r\n    msuLinkHeaderClass: 'masthead',\r\n    videoPlayButtonClass: 'vjs-big-play-button',\r\n    stepProgressClass: 'cl-step-progress',\r\n    navDivClass: 'cl-stepnav-div'\r\n}\r\n","export default abstract class Module {\r\n    abstract start(): void;\r\n\r\n    static loadModules(...modules: Module[]): void {\r\n        for (const module of modules) {\r\n            module.start();\r\n        }\r\n    }\r\n}","export default class ComponentUtil {\r\n    /**\r\n     * There is a react-autobind module that some of our other projects use.\r\n     * I had previously installed this module and was looking at the source on github to make\r\n     * typescript definitions for it, and it's pretty bad. So this is a mini refactor of it, since\r\n     * it's really short anyways.\r\n     *\r\n     * Referenced from\r\n     * https://github.com/cassiozen/React-autobind/blob/master/src/autoBind.js\r\n     */\r\n    static autoBind(context: any, ...props: string[]): void {\r\n        const contextPrototype = Object.getPrototypeOf(context);\r\n\r\n        if (props.length === 0) {\r\n            props = Object.getOwnPropertyNames(contextPrototype);\r\n        }\r\n\r\n        for (const prop of props) {\r\n            const descriptor = Object.getOwnPropertyDescriptor(contextPrototype, prop);\r\n\r\n            // Missing this prop, not a big deal (or the prop isn't a function, so we don't bind it)\r\n            if (descriptor == null || typeof descriptor.value !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            if (ComponentUtil.protectedJavaScriptProperties.includes(prop)) {\r\n                continue;\r\n            }\r\n\r\n            ComponentUtil.bindMethod(contextPrototype, prop, descriptor);\r\n        }\r\n    }\r\n\r\n    // All of the props on the prototype of an empty object should be excluded from binding\r\n    private static protectedJavaScriptProperties: string[] = Object.getOwnPropertyNames(Object.getPrototypeOf({}));\r\n\r\n    /**\r\n     * From autobind-decorator (https://github.com/andreypopp/autobind-decorator/tree/master)\r\n     * Return a descriptor removing the value and returning a getter\r\n     * The getter will return a .bind version of the function\r\n     * and memoize the result against a symbol on the instance\r\n     */\r\n    private static bindMethod(proto: any, method: string, descriptor: PropertyDescriptor) {\r\n        const functionToBind = descriptor.value;\r\n\r\n        Object.defineProperty(proto, method, {\r\n            configurable: true,\r\n            get() {\r\n                if (this === proto || this.hasOwnProperty(method)) {\r\n                    return functionToBind;\r\n                }\r\n\r\n                const boundFunction = functionToBind.bind(this);\r\n\r\n                Object.defineProperty(this, method, {\r\n                    value: boundFunction,\r\n                    configurable: true,\r\n                    writable: true\r\n                });\r\n\r\n                return boundFunction;\r\n            }\r\n        });\r\n    }\r\n}","import ISiteData from '../../interfaces/site/ISiteData';\r\nimport domIdentifiers from '../config/domIdentifiers';\r\nexport default abstract class PageUtil {\r\n    static isClassElementPresent(className: string): boolean {\r\n        const elements = document.getElementsByClassName(className);\r\n\r\n        return !!(elements && elements.length && elements[0]);\r\n    }\r\n\r\n    static get isPageQuiz(): boolean {\r\n        return PageUtil.isClassElementPresent(domIdentifiers.quizClass);\r\n    }\r\n\r\n    static get isPageVideo(): boolean {\r\n        return PageUtil.isClassElementPresent(domIdentifiers.videoClass);\r\n    }\r\n\r\n    static getNavigationBar(): HTMLUListElement | null {\r\n        return document.querySelector('nav ul');\r\n    }\r\n\r\n    static getSiteData(): ISiteData | null {\r\n        const siteDataElement = document.getElementById(domIdentifiers.siteDataId);\r\n\r\n        if (!siteDataElement) {\r\n            return null;\r\n        }\r\n\r\n        return JSON.parse(siteDataElement.innerText);\r\n    }\r\n}\r\n","import Module from './lib/module/Module';\r\nimport MsuHrefModule from './lib/module/modules/MsuHrefModule';\r\nimport QuizModule from './lib/module/modules/QuizModule';\r\nimport StepModule from './lib/module/modules/StepModule';\r\nimport VideoModule from './lib/module/modules/VideoModule';\r\n\r\nModule.loadModules(\r\n    new StepModule(),\r\n    new QuizModule(),\r\n    new VideoModule(),\r\n    new MsuHrefModule()\r\n);","import domIdentifiers from '../../config/domIdentifiers';\r\nimport PageUtil from '../../util/PageUtil';\r\nimport Module from '../Module';\r\n\r\nexport default class MsuHrefModule extends Module {\r\n    start(): void {\r\n        const data = PageUtil.getSiteData();\r\n\r\n        if (!data) {\r\n            return;\r\n        }\r\n\r\n        const linkElement = document.querySelector(`.${domIdentifiers.msuLinkHeaderClass} a`);\r\n\r\n        if (!linkElement) {\r\n            return;\r\n        }\r\n\r\n        linkElement.setAttribute('href', data.root);\r\n    }\r\n}","import QuizListener, { IQuestionData } from '../../api/quiz/QuizListener';\r\nimport domIdentifiers from '../../config/domIdentifiers';\r\nimport ClassUtil from '../../util/ClassUtil';\r\nimport PageUtil from '../../util/PageUtil';\r\nimport Module from '../Module';\r\n\r\nexport default class QuizModule extends Module {\r\n    private static quizContinueKeys: string[] = ['Enter', 'ArrowRight'];\r\n    private quizContainer: HTMLDivElement;\r\n\r\n    static getNextQuestionButton(): HTMLButtonElement | null {\r\n        return document.querySelector(`.${domIdentifiers.quizClass} button`);\r\n    }\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        ClassUtil.autoBind(this);\r\n\r\n        this.quizContainer = document.getElementsByClassName(domIdentifiers.quizClass)[0] as HTMLDivElement;\r\n    }\r\n\r\n    private addNextQuizButtonHooks() {\r\n        document.onkeydown = (e: KeyboardEvent) => {\r\n            if (!QuizModule.quizContinueKeys.includes(e.key)) {\r\n                return;\r\n            }\r\n\r\n            const nextQuestionButton = QuizModule.getNextQuestionButton();\r\n\r\n            if (!nextQuestionButton || !nextQuestionButton.innerText.toLowerCase().includes('next')) {\r\n                return;\r\n            }\r\n\r\n            nextQuestionButton.click();\r\n        };\r\n    }\r\n\r\n    private onNewQuizQuestion() {\r\n        const inputs = this.quizContainer.getElementsByTagName('input');\r\n        let hasFocused: boolean = false;\r\n\r\n        for (const input of inputs) {\r\n            input.setAttribute('autocomplete', 'off');\r\n\r\n            if (!hasFocused && !input.hidden && input.type !== 'hidden' && input.style.display !== 'none') {\r\n                input.focus();\r\n                hasFocused = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    start(): void {\r\n        if (!PageUtil.isPageQuiz) {\r\n            return;\r\n        }\r\n\r\n        this.addNextQuizButtonHooks();\r\n\r\n        new QuizListener({ onQuestion: this.onNewQuizQuestion }).listen();\r\n    }\r\n}\r\n","import domIdentifiers from '../../config/domIdentifiers';\r\nimport ClassUtil from '../../util/ClassUtil';\r\n\r\ninterface IQuizListenerParams {\r\n    onStart?(data: IQuestionData): void;\r\n    onQuestion?(data: IQuestionData): void;\r\n}\r\n\r\nexport interface IQuestionData {\r\n    current: number;\r\n    total: number;\r\n}\r\n\r\nexport default class QuizListener {\r\n    private static questionRegex = /^question (\\d+) of (\\d+)$/i;\r\n    private readonly quizContainer: HTMLElement;\r\n    private currentQuestion: number;\r\n\r\n    constructor(readonly params: IQuizListenerParams) {\r\n        this.quizContainer = document.getElementsByClassName(domIdentifiers.quizClass)[0] as HTMLElement;\r\n        this.currentQuestion = 0;\r\n\r\n        ClassUtil.autoBind(this);\r\n    }\r\n\r\n    private getQuestionDataFromMatch(match: RegExpMatchArray): IQuestionData {\r\n        const current = parseInt(match[1]);\r\n        const total = parseInt(match[2]);\r\n\r\n        return { current, total };\r\n    }\r\n\r\n    private onContainerMutate(mutations: MutationRecord[], observer: MutationObserver) {\r\n        const h2 = this.quizContainer.querySelector('h2');\r\n\r\n        if (!h2) {\r\n            return;\r\n        }\r\n\r\n        if (!QuizListener.questionRegex.test(h2.innerText)) {\r\n            return;\r\n        }\r\n\r\n        observer.disconnect();\r\n\r\n        const match = h2.innerText.match(QuizListener.questionRegex);\r\n\r\n        if (!match) {\r\n            return;\r\n        }\r\n\r\n\r\n        const data = this.getQuestionDataFromMatch(match);\r\n\r\n        this.currentQuestion = data.current;\r\n\r\n        if (this.params.onStart) {\r\n            this.params.onStart(data);\r\n        }\r\n\r\n        if (this.params.onQuestion) {\r\n            this.params.onQuestion(data);\r\n        }\r\n\r\n        this.listenForQuizQuestionChange();\r\n    }\r\n\r\n    private onQuizHeaderMutation() {\r\n        const h2 = this.quizContainer.querySelector('h2');\r\n\r\n        if (!h2) {\r\n            return;\r\n        }\r\n\r\n        if (!QuizListener.questionRegex.test(h2.innerText)) {\r\n            return;\r\n        }\r\n\r\n        const match = h2.innerText.match(QuizListener.questionRegex);\r\n\r\n        if (!match) {\r\n            return;\r\n        }\r\n\r\n        const data = this.getQuestionDataFromMatch(match);\r\n\r\n        if (data.current === this.currentQuestion) {\r\n            return;\r\n        }\r\n\r\n        this.currentQuestion = data.current;\r\n\r\n        if (this.params.onQuestion) {\r\n            this.params.onQuestion(data);\r\n        }\r\n    }\r\n\r\n    private listenForQuizQuestionChange() {\r\n        new MutationObserver(this.onQuizHeaderMutation)\r\n            .observe(this.quizContainer, { subtree: true, characterData: true, childList: true });\r\n    }\r\n\r\n    private listenForQuizStart() {\r\n        new MutationObserver(this.onContainerMutate)\r\n            .observe(this.quizContainer, { subtree: true, childList: true, characterData: true, attributes: true });\r\n    }\r\n\r\n    listen() {\r\n        this.listenForQuizStart();\r\n    }\r\n}","import IStepData from '../../../interfaces/step/IStepData';\r\nimport IStepMetadata from '../../../interfaces/step/IStepMetadata';\r\nimport domIdentifiers from '../../config/domIdentifiers';\r\nimport ClassUtil from '../../util/ClassUtil';\r\nimport DomUtil from '../../util/DomUtil';\r\nimport PageUtil from '../../util/PageUtil';\r\nimport Module from '../Module';\r\n\r\nexport default class StepModule extends Module {\r\n    readonly data: IStepData | null;\r\n    readonly metadata: IStepMetadata | null;\r\n    private sectionHoverDiv?: HTMLElement;\r\n    private sectionNameToIndex: { [key: string]: number } = {};\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        ClassUtil.autoBind(this);\r\n\r\n        this.data = StepModule.getStepData();\r\n        this.metadata = this.processData(this.data);\r\n    }\r\n\r\n    static getStepData(): IStepData | null {\r\n        const element = document.getElementById(domIdentifiers.stepDataId);\r\n\r\n        if (!element) {\r\n            return null;\r\n        }\r\n\r\n        const dataText = element.innerText;\r\n\r\n        return JSON.parse(dataText);\r\n    }\r\n\r\n    private processData(data: IStepData | null): IStepMetadata | null {\r\n        if (!data) {\r\n            return null;\r\n        }\r\n\r\n        if (!data.step) {\r\n            return { isStepEnabled: false };\r\n        }\r\n\r\n        let current;\r\n\r\n        for (let i = 0; i < data.sections.length; ++i) {\r\n            const section = data.sections[i];\r\n\r\n            this.sectionNameToIndex[section.name] = i;\r\n\r\n            if (!current && section.tag === data.current) {\r\n                current = {\r\n                    section,\r\n                    index: i\r\n                };\r\n            }\r\n        }\r\n\r\n        if (!current) {\r\n            return { isStepEnabled: true };\r\n        }\r\n\r\n        return {\r\n            isStepEnabled: true,\r\n            current\r\n        };\r\n    }\r\n\r\n    private getProgressString(current: number) {\r\n        return `(${ current }/${ this.totalSections })`;\r\n    }\r\n\r\n    private get totalSections(): number {\r\n        return (this.data && this.data.sections && this.data.sections.length) || 0;\r\n    }\r\n\r\n    private onSectionHoverMutate(mutations: MutationRecord[]) {\r\n        for (const mutation of mutations) {\r\n            let target: HTMLElement;\r\n\r\n            if (mutation.target instanceof HTMLElement) {\r\n                target = mutation.target;\r\n            } else {\r\n                if (mutation.type === 'characterData' && this.sectionHoverDiv) {\r\n                    target = this.sectionHoverDiv;\r\n                } else {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            let pageName = target.innerText.trim();\r\n\r\n            if (!this.sectionNameToIndex.hasOwnProperty(pageName)) {\r\n                if (pageName.endsWith('(cont)')) {\r\n                    pageName = pageName.replace(/\\s+\\(cont\\)\\s*/, '').trim();\r\n                }\r\n\r\n                // Check again in case the cont removal fixed it\r\n                if (!this.sectionNameToIndex.hasOwnProperty(pageName)) {\r\n                    continue;\r\n                }\r\n            }\r\n\r\n            target.innerText += ` ${ this.getProgressString(this.sectionNameToIndex[pageName] + 1) }`;\r\n            break;\r\n        }\r\n    }\r\n\r\n    private addNavBarProgressIndicator() {\r\n        const navigationBar = PageUtil.getNavigationBar();\r\n\r\n        if (!navigationBar || !this.metadata || !this.metadata.current) {\r\n            return;\r\n        }\r\n\r\n        const progressElement = document.createElement('li');\r\n        progressElement.innerText = `Progress: ${ this.getProgressString(this.metadata.current.index + 1) }`;\r\n\r\n        navigationBar.appendChild(progressElement);\r\n    }\r\n\r\n    private addHoverProgressIndicator() {\r\n        const hoverDiv = document.querySelector(`.${ domIdentifiers.stepProgressClass } div`);\r\n\r\n        if (!hoverDiv) {\r\n            return;\r\n        }\r\n\r\n        this.sectionHoverDiv = hoverDiv as HTMLElement;\r\n\r\n        new MutationObserver(this.onSectionHoverMutate)\r\n            .observe(hoverDiv, { characterData: true, attributes: true, subtree: true });\r\n    }\r\n\r\n    private addProgressIndicators() {\r\n        this.addNavBarProgressIndicator();\r\n        this.addHoverProgressIndicator();\r\n    }\r\n\r\n    private addDuplicateNav() {\r\n        const nav = document.getElementsByClassName(domIdentifiers.navDivClass)[0];\r\n\r\n        if (!nav) {\r\n            return;\r\n        }\r\n\r\n        const content = document.getElementsByClassName('content')[0];\r\n\r\n        if (!content) {\r\n            return;\r\n        }\r\n\r\n        const clonedNav = nav.cloneNode(true) as HTMLDivElement;\r\n\r\n        const originalCanvas = nav.querySelector('canvas');\r\n        const clonedCanvas = clonedNav.querySelector('canvas');\r\n\r\n        if (originalCanvas && clonedCanvas) {\r\n            DomUtil.cloneCanvas(originalCanvas, clonedCanvas);\r\n            clonedCanvas.title = 'Hovering on the duplicate nav is not currently supported';\r\n        }\r\n\r\n        content.insertAdjacentElement('afterend', clonedNav);\r\n    }\r\n\r\n    start(): void {\r\n        this.addProgressIndicators();\r\n        this.addDuplicateNav();\r\n    }\r\n}","export default abstract class DomUtil {\r\n    static cloneCanvas(original: HTMLCanvasElement, destination: HTMLCanvasElement): void {\r\n        const context = destination.getContext('2d');\r\n\r\n        if (!context) {\r\n            return;\r\n        }\r\n\r\n        destination.width = original.width;\r\n        destination.height = original.height;\r\n\r\n        context.drawImage(original, 0, 0);\r\n    }\r\n}","import domIdentifiers from '../../config/domIdentifiers';\r\nimport TapEventListener from '../../event/TapEventListener';\r\nimport ClassUtil from '../../util/ClassUtil';\r\nimport PageUtil from '../../util/PageUtil';\r\nimport Module from '../Module';\r\n\r\nexport default class VideoModule extends Module {\r\n    private static _secondsToScrub: number = 5;\r\n    private static _playbackRateChange: number = 0.125;\r\n    private _video?: HTMLVideoElement;\r\n    private _videoContainer?: HTMLElement;\r\n    private _playbackDisplay?: HTMLElement;\r\n\r\n    constructor() {\r\n        super();\r\n\r\n        ClassUtil.autoBind(this);\r\n    }\r\n\r\n    private onMutation(mutations: MutationRecord[], observer: MutationObserver): void {\r\n       for (const mutation of mutations) {\r\n           if (!(mutation.target instanceof Element)) {\r\n               continue;\r\n           }\r\n\r\n           if (mutation.target.id === domIdentifiers.videoId) {\r\n               this.addVideoHooks(mutation.target as HTMLVideoElement);\r\n               observer.disconnect();\r\n               return;\r\n           }\r\n       }\r\n    }\r\n\r\n    private async toggleVideoState() {\r\n        if (!this._video) {\r\n            return;\r\n        }\r\n\r\n        if (this._video.paused) {\r\n           return this._video.play();\r\n        }\r\n\r\n        return this._video.pause();\r\n    }\r\n\r\n    private onTap() {\r\n       this.toggleVideoState()\r\n           .catch(e => console.error('Unable to toggle video state:', e));\r\n    }\r\n\r\n    private updatePlaybackRate(newPlaybackRate: number) {\r\n        if (!this._video || !this._playbackDisplay) {\r\n            return;\r\n        }\r\n\r\n        this._video.playbackRate = newPlaybackRate;\r\n        this._playbackDisplay.innerText = `Playback Speed: ${newPlaybackRate}`;\r\n    }\r\n\r\n    private addKeyHandlers(videoContainer: HTMLElement, video: HTMLVideoElement) {\r\n        videoContainer.addEventListener('keydown',  (e: KeyboardEvent) => {\r\n            if (['ArrowLeft'].includes(e.key)) {\r\n                video.currentTime = Math.max(video.currentTime - VideoModule._secondsToScrub, 0);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            if (['ArrowRight'].includes(e.key)) {\r\n                video.currentTime = Math.min(video.duration, video.currentTime + VideoModule._secondsToScrub);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            if (['_', '-'].includes(e.key)) {\r\n                this.updatePlaybackRate(Math.max(video.playbackRate - VideoModule._playbackRateChange, 0));\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            if (['+', '='].includes(e.key)) {\r\n                this.updatePlaybackRate(video.playbackRate + VideoModule._playbackRateChange);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            if (['0'].includes(e.key)) {\r\n                this.updatePlaybackRate(1.0);\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n\r\n            if ([' ', 'Space'].includes(e.key)) {\r\n                this.onTap();\r\n                e.preventDefault();\r\n                return;\r\n            }\r\n        });\r\n    }\r\n\r\n    private addTapHandler(videoContainer: HTMLElement) {\r\n        const tapListener = new TapEventListener(videoContainer, this.onTap);\r\n        tapListener.listen();\r\n    }\r\n\r\n    private setupPlaybackDisplay(video: HTMLVideoElement) {\r\n        const videoContentDiv = document.getElementsByClassName(domIdentifiers.videoClass)[0];\r\n\r\n        if (videoContentDiv) {\r\n            this._playbackDisplay = document.createElement('div');\r\n            this.updatePlaybackRate(video.playbackRate);\r\n            videoContentDiv.insertAdjacentElement('afterend', this._playbackDisplay);\r\n        }\r\n    }\r\n\r\n    private centerPlayButton(videoContainer: HTMLElement) {\r\n        const { offsetHeight: containerHeight, offsetWidth: containerWidth } = videoContainer;\r\n\r\n        const playButton = document.getElementsByClassName(domIdentifiers.videoPlayButtonClass)[0];\r\n\r\n        if (!playButton) {\r\n            return;\r\n        }\r\n\r\n        if (!(playButton instanceof HTMLElement)) {\r\n            return;\r\n        }\r\n\r\n        const { offsetHeight: buttonHeight, offsetWidth: buttonWidth } = playButton;\r\n\r\n        if (!containerHeight || !containerWidth || !buttonHeight || !buttonWidth) {\r\n            return;\r\n        }\r\n\r\n        const newTop = (containerHeight - buttonHeight) / 2;\r\n        const newLeft = (containerWidth - buttonWidth) / 2;\r\n\r\n        playButton.style.top = `${newTop}px`;\r\n        playButton.style.left = `${newLeft}px`;\r\n    }\r\n\r\n    private addVideoHooks(video: HTMLVideoElement) {\r\n        const videoContainer = document.getElementById(domIdentifiers.videoContainerId);\r\n\r\n        if (!videoContainer) {\r\n            return;\r\n        }\r\n\r\n        this._videoContainer = videoContainer;\r\n        this._video = video;\r\n\r\n        this.setupPlaybackDisplay(video);\r\n        this.addTapHandler(videoContainer);\r\n        this.addKeyHandlers(videoContainer, video);\r\n        this.centerPlayButton(videoContainer);\r\n    }\r\n\r\n    start(): void {\r\n        if (!PageUtil.isPageVideo) {\r\n            return;\r\n        }\r\n\r\n        const video = document.getElementById(domIdentifiers.videoId);\r\n\r\n        if (video) {\r\n            this.addVideoHooks(video as HTMLVideoElement);\r\n            return;\r\n        }\r\n\r\n        const videoContainer = document.getElementsByClassName(domIdentifiers.videoClass)[0];\r\n\r\n        const observer = new MutationObserver(this.onMutation);\r\n\r\n        observer.observe(videoContainer, { childList: true, subtree: true });\r\n    }\r\n}","import ClassUtil from '../util/ClassUtil';\r\n\r\ninterface ITouchMovement {\r\n    x: number;\r\n    y: number;\r\n}\r\n\r\nexport default class TapEventListener {\r\n    private static _tapMaxTimeMs: number = 200;\r\n    private static _dragMaxSqrtDistance: number = 20;\r\n    private _initialTouchTime: number;\r\n    private _initialTouch?: Touch;\r\n    private _lastTouch?: Touch;\r\n    private _isActive: boolean;\r\n\r\n    constructor(readonly element: Element, readonly onTap: () => void) {\r\n        ClassUtil.autoBind(this);\r\n\r\n        this._isActive = false;\r\n        this._initialTouchTime = 0;\r\n    }\r\n\r\n    private static getMovementDelta(newer: Touch, older: Touch): ITouchMovement {\r\n        return {\r\n            x: newer.pageX - older.pageX,\r\n            y: newer.pageY - older.pageY\r\n        };\r\n    }\r\n\r\n    private onTouchStart(event: Event) {\r\n        if (!(event instanceof TouchEvent)) {\r\n            return;\r\n        }\r\n\r\n        if (event.touches.length !== 1) {\r\n            return;\r\n        }\r\n\r\n        this._initialTouch = event.touches[0];\r\n        this._initialTouchTime = Date.now();\r\n        this._isActive = true;\r\n    }\r\n\r\n    private onTouchMove(event: Event) {\r\n        if (!(event instanceof TouchEvent)) {\r\n            return;\r\n        }\r\n\r\n        this._lastTouch = event.touches[0];\r\n\r\n        if (!this._initialTouch) {\r\n            return;\r\n        }\r\n\r\n        const movement = TapEventListener.getMovementDelta(this._lastTouch, this._initialTouch);\r\n\r\n        if (Math.sqrt(movement.x ** 2 + movement.y ** 2) >= TapEventListener._dragMaxSqrtDistance) {\r\n            this._isActive = false;\r\n        }\r\n    }\r\n\r\n    private onTouchEnd(event: Event) {\r\n        if (!(event instanceof TouchEvent)) {\r\n            return;\r\n        }\r\n\r\n        if (!this._isActive) {\r\n            return;\r\n        }\r\n\r\n        if (Date.now() - this._initialTouchTime >= TapEventListener._tapMaxTimeMs) {\r\n            return;\r\n        }\r\n\r\n        this.onTap();\r\n    }\r\n\r\n    private addHooks() {\r\n        this.element.addEventListener('touchstart', this.onTouchStart);\r\n        this.element.addEventListener('touchmove', this.onTouchMove);\r\n        this.element.addEventListener('touchend', this.onTouchEnd);\r\n    }\r\n\r\n    public listen() {\r\n        this.addHooks();\r\n    }\r\n}"],"sourceRoot":""}